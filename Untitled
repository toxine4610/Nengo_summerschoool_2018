# class to create a simple environment

import nengo
import numpy as np

class Environment(object):

    def __init__(self, size=10, dt=0.001):

        self.size = size
        self.x = size / 2.
        self.y = size / 2.
        self.th = 0

        self.dt = dt

        self.svg_open = '<svg width="100%%" height="100%%" viewbox="0 0 {0} {1}">'.format(self.size, self.size)
        self.walls    = '<rect width="{0}" height="{1}" style="fill:white;stroke:black;stroke-width:3"/>'.format(self.size, self.size)
        self.target1   =  '<rect width "1" height  = "1" style = "fill:red;stroke:black;stroke-width:1"/> '

        self.agent_template = '<polygon points="0.25,0.25 -0.25,0.25 0,-0.5" style="fill:blue" transform="translate({0},{1}) rotate({2})"/>'

        self.svg_close = '</svg>'

        self._nengo_html_ = ''

    def __call__(self, t, v):

        self.th += v[1] * self.dt
        self.x += np.cos(self.th)*v[0]*self.dt
        self.y += np.sin(self.th)*v[0]*self.dt

        self.x = np.clip(self.x, 0, self.size)
        self.y = np.clip(self.y, 0, self.size)
        if self.th > np.pi:
            self.th -= 2*np.pi
        if self.th < -np.pi:
            self.th += 2*np.pi

        direction = self.th * 180. / np.pi + 90.
        self._nengo_html_ = self.svg_open
        self._nengo_html_ += self.walls
        self.nengo_html_ += self.targets
        self._nengo_html_ += self.agent_template.format(self.x, self.y, direction)
        self._nengo_html_ += self.svg_close

        return self.x, self.y, self.th
